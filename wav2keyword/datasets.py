# AUTOGENERATED! DO NOT EDIT! File to edit: ../00_datasets.ipynb.

# %% auto 0
__all__ = ['dataloader_pipeline']

# %% ../00_datasets.ipynb 4
from typing import List, Tuple, Dict
import random
from nbdev.showdoc import *
from IPython.display import display, Audio
from datasets import load_dataset
from datasets.dataset_dict import DatasetDict

# %% ../00_datasets.ipynb 6
def _get_labels_dict(labels: List[str]) -> Tuple[Dict[str, str], Dict[str, str]]:
    """Builds maps form id to label and label to id based on label index.

    Args:
        labels (List[str]): List of labels

    Returns:
        Tuple[Dict[str, str], Dict[str, str]]: Maps
    """
    label2id, id2label = dict(), dict()
    for i, label in enumerate(labels):
        label2id[label] = str(i)
        id2label[str(i)] = label
    return id2label, label2id


def dataloader_pipeline(load_dataset_kwargs: dict) -> Dict:
    """Loads dataset and builds maps from label to id and id to label.

    Args:
        load_dataset_kwargs (dict): Parameters for huggingface's load_dataset

    Returns:
        Dict: Keys are 'dataset', 'id2label' and 'label2id'
    """
    dataset = load_dataset(**load_dataset_kwargs)
    labels = dataset["train"].features["label"].names
    id2label, label2id = _get_labels_dict(labels)
    return {'dataset': dataset, 'id2label': id2label, 'label2id': label2id}
